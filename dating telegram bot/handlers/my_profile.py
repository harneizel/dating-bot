from aiogram import Router, F, Bot
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton, FSInputFile, ReplyKeyboardRemove

from database.database import cursor, conn
from state.register_state import Register_profile
import os

router = Router()


@router.message(F.text == '–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')
async def my_profile(message: Message, bot: Bot):
	user_id: int = message.from_user.id
	keyboard = ReplyKeyboardMarkup(
		keyboard=[
			[KeyboardButton(text='–ú–µ–Ω—è –æ—Ü–µ–Ω–∏–ª–∏')],
			[KeyboardButton(text='–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å')],
			[KeyboardButton(text='–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')]
		],
		resize_keyboard=True

	)


	cursor.execute("SELECT * FROM users WHERE user_id = ?", (user_id,))
	user_data = cursor.fetchone()

	if not user_data:
		await bot.send_message(
			chat_id=message.chat.id,
			text=f'–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å! /anketa',
		)
	else:
		db_user_id = user_data[0] 
		await bot.send_message(
			chat_id=message.chat.id,
			text=f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å!',
			reply_markup=keyboard
		)
	cursor.execute("SELECT * FROM users WHERE user_id=(?)", (user_id,))
	row = cursor.fetchone()
	print(row)

	if row:
		#user_id, name, gender, age, photo, anketa_description, zodiac_sign, kurs, faculty, grade = row
		user_id,  name, gender, age, photo, anketa_description, zodiac_sign, kurs, faculty, grade = row[0], row[3], row[4], row[5], row[6], row[7], row[8], row[9], row[10], row[11]
		current_dir = os.path.split(os.path.dirname(__file__))[0] # –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞
		destination = f'{current_dir}/photos/{photo}.jpg'

		if gender == "male":
			gender = '–ú—É–∂—Å–∫–æ–π'
		if gender == "female":
			gender = '–ñ–µ–Ω—Å–∫–∏–π'
		if faculty == 'LF':
			faculty = '–Æ–§'
		if faculty == 'GF':
			faculty = '–ì–§'
		if faculty == 'BTB':
			faculty = '–§–ë–¢–î–∏–≠–ë'
		if faculty == 'FIPM':
			faculty = '–§–ò–ü–ú'
		if faculty == 'FSTIG':
			faculty = '–§–°–¢–ò–ì'
		if faculty == 'FU':
			faculty = '–§–£'

		text = (f'ü™Ñ –ò–º—è: <b>{name}</b>\n'
		        f'–í–∞—à –ø–æ–ª: <b>{gender}</b>\n'
		        f'–í–∞—à –≤–æ–∑—Ä–∞—Å—Ç: <b>{age}</b>\n'
		        f'–û–ø–∏—Å–∞–Ω–∏–µ –≤–∞—à–µ–π –∞–Ω–∫–µ—Ç—ã: <b>{anketa_description}</b>\n'
		        f'–ó–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞: <b>{zodiac_sign}</b>\n'
		        f'–ö—É—Ä—Å: <b>{kurs}</b>\n'
		        f'–§–∞–∫—É–ª—å—Ç–µ—Ç: <b>{faculty}</b>\n'
		        f'–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: <b>{grade}</b>')


		await bot.send_photo(
			chat_id=message.chat.id,
			caption=text,
			photo=FSInputFile(destination)
		)


@router.message(F.text == '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å')
async def my_profile_redaction(message: Message, bot: Bot):
	keyboard = ReplyKeyboardMarkup(
		keyboard=[
			[
				KeyboardButton(text='–ò–º—è'),
				KeyboardButton(text='–í–æ–∑—Ä–∞—Å—Ç'),
				KeyboardButton(text='–ü–æ–ª')
			],
			[
				KeyboardButton(text='–§–æ—Ç–æ'),
				KeyboardButton(text='–û–ø–∏—Å–∞–Ω–∏–µ'),
				KeyboardButton(text='–ó–Ω–∞–∫ –ó–æ–¥–∏–∞–∫–∞')
			],
			[
				KeyboardButton(text="–ú–∞–≥–∏—Å—Ç—Ä/–ë–∞–∫–∞–ª–∞–≤—Ä"),
				KeyboardButton(text='–§–∞–∫—É–ª—å—Ç–µ—Ç'),
				KeyboardButton(text='–ö—É—Ä—Å')
			],
			[
				KeyboardButton(text='–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')
			]
		],
		resize_keyboard=True
	)

	await bot.send_message(
		chat_id=message.chat.id,
		text=f'–ß—Ç–æ –º—ã —Ö–æ—Ç–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å?',
		reply_markup=keyboard
	)


@router.message(F.text == '–ò–º—è')
async def my_profile_redaction_name(message: Message, bot: Bot, state: FSMContext):
	await state.set_state(Register_profile.name)
	await bot.send_message(
		chat_id=message.chat.id,
		text=f'–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?',
		reply_markup=ReplyKeyboardRemove()
	)


@router.message(Register_profile.name)
async def name_state(message: Message, bot: Bot, state: FSMContext):
	name = message.text
	user_id: int = message.from_user.id

	if len(name) <= 1 or len(name) > 16:
		await bot.send_message(
			chat_id=message.chat.id,
			text=f'‚ùå –í—ã –¥–æ–ª–∂–Ω—ã –≤–≤–µ—Å—Ç–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∏–º—è'
		)

	elif len(name.split()) > 1:
		await bot.send_message(
			chat_id=message.chat.id,
			text=f'‚ùå –ò–º—è –Ω–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–±–µ–ª–æ–≤'
		)

	elif not name.isalpha():
		await bot.send_message(
			chat_id=message.chat.id,
			text=f'‚ùå –ò–º—è –Ω–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ü–∏—Ñ—Ä—ã'
		)

	else:
		cursor.execute("UPDATE users SET name = ? WHERE user_id = ?", (name, user_id))
		conn.commit()
		keyboard1 = ReplyKeyboardMarkup(
			keyboard=[
				[KeyboardButton(text='–°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã')],
				[KeyboardButton(text='–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')]
			],
			resize_keyboard=True,
		)
		await state.clear()
		await bot.send_message(
			chat_id=message.chat.id,
			text=f'–û—Ç–ª–∏—á–Ω–æ! –ß—Ç–æ –≤—ã–±–µ—Ä–µ–º?',
			reply_markup=keyboard1
		)


@router.message(F.text == '–í–æ–∑—Ä–∞—Å—Ç')
async def my_profile_redaction_name(message: Message, bot: Bot, state: FSMContext):
	await state.set_state(Register_profile.age)
	await bot.send_message(
		chat_id=message.chat.id,
		text=f'–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?',
		reply_markup=ReplyKeyboardRemove()
	)

@router.message(Register_profile.age)
async def age_state(message: Message, bot: Bot, state: FSMContext):
	age = message.text
	user_id: int = message.from_user.id

	if not age.isdigit():
		await bot.send_message(
			chat_id=message.chat.id,
			text='‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ'
		)
	else:
		age_value = int(age)
		if age_value > 100 or age_value < 5:
			await bot.send_message(
				chat_id=message.chat.id,
				text='‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ'
			)
		else:
			cursor.execute("UPDATE users SET age = ? WHERE user_id = ?", (age, user_id))
			conn.commit()
			keyboard1 = ReplyKeyboardMarkup(
				keyboard=[
					[KeyboardButton(text='–°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã')],
					[KeyboardButton(text='–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')]
				],
				resize_keyboard=True,
			)
			await state.clear()
			await bot.send_message(
				chat_id=message.chat.id,
				text=f'–û—Ç–ª–∏—á–Ω–æ! –ß—Ç–æ –≤—ã–±–µ—Ä–µ–º?',
				reply_markup=keyboard1
			)


@router.message(F.text == '–ü–æ–ª')
async def my_profile_redaction_gender(message: Message, bot: Bot, state: FSMContext):
	await state.set_state(Register_profile.gender)
	keyboard = ReplyKeyboardMarkup(
		keyboard=[
			[KeyboardButton(text='–ñ–µ–Ω—Å–∫–∏–π')],
			[KeyboardButton(text='–ú—É–∂—Å–∫–æ–π')],
		],
		resize_keyboard=True,
	)
	await bot.send_message(
		chat_id=message.chat.id,
		text=f'–ö–∞–∫–æ–π —Ç–≤–æ–π –≥–µ–Ω–¥–µ—Ä?',
		reply_markup=keyboard
	)


@router.message(Register_profile.gender)
async def gender_state(message: Message, bot: Bot, state: FSMContext):
	gender = message.text
	user_id: int = message.from_user.id

	if gender not in ['–ú—É–∂—Å–∫–æ–π', '–ñ–µ–Ω—Å–∫–∏–π']:
		await bot.send_message(
			chat_id=message.chat.id,
			text=f'–¢–∞–∫–æ–≥–æ –ø–æ–ª–∞ –Ω–µ—Ç! –≤—ã–±–µ—Ä–µ—Ç–µ –∫–æ—Ä–µ–∫—Ç–Ω—ã–π'
		)
	else:
		cursor.execute("UPDATE users SET gender = ? WHERE user_id = ?", (gender, user_id))
		conn.commit()
		keyboard1 = ReplyKeyboardMarkup(
			keyboard=[
				[KeyboardButton(text='–°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã')],
				[KeyboardButton(text='–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')]
			],
			resize_keyboard=True,
		)
		await state.clear()
		await bot.send_message(
			chat_id=message.chat.id,
			text=f'–û—Ç–ª–∏—á–Ω–æ! –ß—Ç–æ –≤—ã–±–µ—Ä–µ–º?',
			reply_markup=keyboard1
		)


@router.message(F.text == '–§–æ—Ç–æ')
async def my_profile_redaction_photo(message: Message, bot: Bot, state: FSMContext):
	await state.set_state(Register_profile.photo)
	await bot.send_message(
		chat_id=message.chat.id,
		text=f'–°–∫–∏–Ω—å —Å–≤–æ—é —Ñ–æ—Ç–æ—á–∫—É!',
		reply_markup=ReplyKeyboardRemove()
	)


@router.message(Register_profile.photo)
async def photo_state(message: Message, bot: Bot, state: FSMContext):
	user_id: int = message.from_user.id
	if message.photo:
		photo = message.photo[-1]
		file_id = photo.file_id
		file_info = await bot.get_file(file_id)
		file_path = file_info.file_path
		current_dir = os.path.split(os.path.dirname(__file__))[0] # –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞
		destination = f'{current_dir}/photos/{file_id}.jpg'
		await bot.download_file(file_path, destination)

		cursor.execute("UPDATE users SET photo = ? WHERE user_id = ?", (file_id, user_id))
		conn.commit()
		keyboard1 = ReplyKeyboardMarkup(
			keyboard=[
				[KeyboardButton(text='–°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã')],
				[KeyboardButton(text='–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')]
			],
			resize_keyboard=True,
		)
		await state.clear()
		await bot.send_message(
			chat_id=message.chat.id,
			text=f'–û—Ç–ª–∏—á–Ω–æ! –ß—Ç–æ –≤—ã–±–µ—Ä–µ–º?',
			reply_markup=keyboard1
		)

	else:
		await bot.send_message(
			chat_id=message.chat.id,
			text=f'–≠—Ç–æ —Ä–∞–∑–≤–µ —Ñ–æ—Ç–æ?!',
			reply_markup=ReplyKeyboardRemove()
		)


@router.message(F.text == '–û–ø–∏—Å–∞–Ω–∏–µ')
async def my_profile_redaction_descriotion(message: Message, bot: Bot, state: FSMContext):
	await state.set_state(Register_profile.anketa_description)
	await bot.send_message(
		chat_id=message.chat.id,
		text=f'–ù–∞–ø–∏—à–∏ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ!',
		reply_markup=ReplyKeyboardRemove()
	)


@router.message(Register_profile.anketa_description)
async def description_state(message: Message, bot: Bot, state: FSMContext):
	description = message.text
	user_id: int = message.from_user.id

	if len(description) > 200:
		await bot.send_message(
			chat_id=message.chat.id,
			text='‚ùå –°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ!'
		)
	elif len(description) < 10:
		await bot.send_message(
			chat_id=message.chat.id,
			text='‚ùå –°–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ!'
		)
	else:
		cursor.execute("UPDATE users SET anketa_description = ? WHERE user_id = ?", (description, user_id))
		conn.commit()
		keyboard1 = ReplyKeyboardMarkup(
			keyboard=[
				[KeyboardButton(text='–°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã')],
				[KeyboardButton(text='–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')]
			],
			resize_keyboard=True,
		)
		await state.clear()
		await bot.send_message(
			chat_id=message.chat.id,
			text=f'–û—Ç–ª–∏—á–Ω–æ! –ß—Ç–æ –≤—ã–±–µ—Ä–µ–º?',
			reply_markup=keyboard1
		)


@router.message(F.text == '–ó–Ω–∞–∫ –ó–æ–¥–∏–∞–∫–∞')
async def my_profile_redaction_sign_zodiak(message: Message, bot: Bot, state: FSMContext):
	await state.set_state(Register_profile.zodiak_sign)
	keyboard = ReplyKeyboardMarkup(
		keyboard=[
			[KeyboardButton(text="–û–≤–µ–Ω"), KeyboardButton(text='–¢–µ–ª–µ—Ü'), KeyboardButton(text='–ë–ª–∏–∑–Ω–µ—Ü—ã'),
			 KeyboardButton(text='–†–∞–∫')],
			[KeyboardButton(text='–õ–µ–≤'), KeyboardButton(text='–î–µ–≤–∞'), KeyboardButton(text='–í–µ—Å—ã'),
			 KeyboardButton(text='–°–∫–æ—Ä–ø–∏–æ–Ω')],
			[KeyboardButton(text='–°—Ç—Ä–µ–ª–µ—Ü'), KeyboardButton(text='–ö–æ–∑–µ—Ä–æ–≥'), KeyboardButton(text='–í–æ–¥–æ–ª–µ–π'),
			 KeyboardButton(text='–†—ã–±—ã')],
		],
		resize_keyboard=True
	)
	await bot.send_message(
		chat_id=message.chat.id,
		text=f'–ö–∞–∫–æ–≤ —Ç–≤–æ–π –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞?',
		reply_markup=keyboard
	)


@router.message(Register_profile.zodiak_sign)
async def zodiak_state(message: Message, bot: Bot, state: FSMContext):
	znak_zodiaka = message.text
	user_id: int = message.from_user.id

	if znak_zodiaka in ["–û–≤–µ–Ω",
	                "–¢–µ–ª–µ—Ü",
	                "–ë–ª–∏–∑–Ω–µ—Ü—ã",
	                "–†–∞–∫",
	                "–õ–µ–≤",
	                "–î–µ–≤–∞",
	                "–í–µ—Å—ã",
	                "–°–∫–æ—Ä–ø–∏–æ–Ω",
	                "–°—Ç—Ä–µ–ª–µ—Ü",
	                "–ö–æ–∑–µ—Ä–æ–≥",
	                "–í–æ–¥–æ–ª–µ–π",
	                "–†—ã–±—ã"]:
		cursor.execute("UPDATE users SET zodiac_sign = ? WHERE user_id = ?", (znak_zodiaka, user_id))
		conn.commit()
		keyboard1 = ReplyKeyboardMarkup(
			keyboard=[
				[KeyboardButton(text='–°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã')],
				[KeyboardButton(text='–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')]
			],
			resize_keyboard=True,
		)
		await state.clear()
		await bot.send_message(
			chat_id=message.chat.id,
			text=f'–û—Ç–ª–∏—á–Ω–æ! –ß—Ç–æ –≤—ã–±–µ—Ä–µ–º?',
			reply_markup=keyboard1
		)
	else:
		await bot.send_message(
			chat_id=message.chat.id,
			text='‚ùå –¢–∞–∫–æ–≥–æ –∑–Ω–∞–∫–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!'
		)


@router.message(F.text == "–ú–∞–≥–∏—Å—Ç—Ä/–ë–∞–∫–∞–ª–∞–≤—Ä")
async def my_profile_redaction_grade(message: Message, bot: Bot, state: FSMContext):
	await state.set_state(Register_profile.grade)
	keyboard = ReplyKeyboardMarkup(
		keyboard=[
			[KeyboardButton(text='–ë–∞–∫–∞–ª–∞–≤—Ä')],
			[KeyboardButton(text='–ú–∞–≥–∏—Å—Ç—Ä')],
		],
		resize_keyboard=True,
	)
	await bot.send_message(
		chat_id=message.chat.id,
		text=f'–í—ã–±–∏—Ä–∞–π!',
		reply_markup=keyboard
	)


@router.message(Register_profile.grade)
async def grade_state(message: Message, bot: Bot, state: FSMContext):
	grade = message.text
	user_id: int = message.from_user.id

	if grade in ['–ë–∞–∫–∞–ª–∞–≤—Ä', '–ú–∞–≥–∏—Å—Ç—Ä']:
		cursor.execute("UPDATE users SET grade = ? WHERE user_id = ?", (grade, user_id))
		conn.commit()
		keyboard1 = ReplyKeyboardMarkup(
			keyboard=[
				[KeyboardButton(text='–°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã')],
				[KeyboardButton(text='–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')]
			],
			resize_keyboard=True,
		)
		await state.clear()
		await bot.send_message(
			chat_id=message.chat.id,
			text=f'–û—Ç–ª–∏—á–Ω–æ! –ß—Ç–æ –≤—ã–±–µ—Ä–µ–º?',
			reply_markup=keyboard1
		)

	else:
		await bot.send_message(
			chat_id=message.chat.id,
			text='‚ùå –£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ'
		)


@router.message(F.text == '–§–∞–∫—É–ª—å—Ç–µ—Ç')
async def my_profile_redaction_facultet(message: Message, bot: Bot, state: FSMContext):
	await state.set_state(Register_profile.faculty)
	keyboard = ReplyKeyboardMarkup(
					keyboard=[
						[KeyboardButton(text='–Æ–§'), KeyboardButton(text='–ì–§'), KeyboardButton(text='–§–ë–¢–î–∏–≠–ë')],
						[KeyboardButton(text='–§–ò–ü–ú'), KeyboardButton(text='–§–°–¢–ò–ì'), KeyboardButton(text='–§–£')],
					],
					resize_keyboard=True,
				)
	await bot.send_message(
		chat_id=message.chat.id,
		text=f'–í—ã–±–∏—Ä–∞–π!',
		reply_markup=keyboard
	)

@router.message(Register_profile.faculty)
async def faculty_state(message: Message, bot: Bot, state: FSMContext):
	faculty = message.text
	user_id: int = message.from_user.id

	if faculty not in ["–Æ–§", "–ì–§", "–§–ë–¢–î–∏–≠–ë", "–§–ò–ü–ú", "–§–°–¢–ò–ì", "–§–£"]:
		await bot.send_message(
			chat_id=message.chat.id,
			text='‚ùå –£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ'
		)
	else:
		if faculty == '–Æ–§':
			faculty = 'LF'
		if faculty == '–ì–§':
			faculty = 'GF'
		if faculty == '–§–ë–¢–î–∏–≠–ë':
			faculty = 'BTB'
		if faculty == '–§–ò–ü–ú':
			faculty = 'FIPM'
		if faculty == '–§–°–¢–ò–ì':
			faculty = 'FSTIG'
		if faculty == '–§–£':
			faculty = 'FU'
		cursor.execute("UPDATE users SET faculty = ? WHERE user_id = ?", (faculty, user_id))
		conn.commit()
		keyboard1 = ReplyKeyboardMarkup(
			keyboard=[
				[KeyboardButton(text='–°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã')],
				[KeyboardButton(text='–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')]
			],
			resize_keyboard=True,
		)
		await state.clear()
		await bot.send_message(
			chat_id=message.chat.id,
			text=f'–û—Ç–ª–∏—á–Ω–æ! –ß—Ç–æ –≤—ã–±–µ—Ä–µ–º?',
			reply_markup=keyboard1
		)


@router.message(F.text == '–ö—É—Ä—Å')
async def my_profile_redaction_kurs(message: Message, bot: Bot, state: FSMContext):
	await state.set_state(Register_profile.kurs)
	keyboard1 = ReplyKeyboardMarkup(
		keyboard=[
			[KeyboardButton(text="1"), KeyboardButton(text='2'), KeyboardButton(text='3'),
			 KeyboardButton(text='4'),
			 KeyboardButton(text='5')],
		],
		resize_keyboard=True
	)
	await bot.send_message(
		chat_id=message.chat.id,
		text=f'–í—ã–±–∏—Ä–∞–π!',
		reply_markup=keyboard1
	)


@router.message(Register_profile.kurs)
async def kurs_state(message: Message, bot: Bot, state: FSMContext):
	kurs = message.text
	user_id: int = message.from_user.id

	if kurs in [1, 2, 3, 4, 5, "1", "2", "3", "4", "5"]:
		cursor.execute("UPDATE users SET kurs = ? WHERE user_id = ?", (kurs, user_id))
		conn.commit()
		keyboard1 = ReplyKeyboardMarkup(
			keyboard=[
				[KeyboardButton(text='–°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã')],
				[KeyboardButton(text='–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')]
			],
			resize_keyboard=True,
		)
		await state.clear()
		await bot.send_message(
			chat_id=message.chat.id,
			text=f'–û—Ç–ª–∏—á–Ω–æ! –ß—Ç–æ –≤—ã–±–µ—Ä–µ–º?',
			reply_markup=keyboard1
		)
	else:
		await bot.send_message(
			chat_id=message.chat.id,
			text='‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –∫—É—Ä—Å!'
		)